#include <stdio.h>
#include <string.h>
#include <ctype.h>
#define MAX_TEXT_LENGTH 500
void analyzeFrequency(const char *ciphertext, int freq[]) {
    for (int i = 0; ciphertext[i] != '\0'; i++) {
        if (isprint(ciphertext[i])) { 
            freq[(unsigned char)ciphertext[i]]++;
        }
    }
}
void decrypt(const char *ciphertext, const char *key, char *plaintext) {
    for (int i = 0; ciphertext[i] != '\0'; i++) {
        char ch = ciphertext[i];
        if (isprint(ch)) { 
            plaintext[i] = key[(unsigned char)ch];
        } else {
            plaintext[i] = ch; 
        }
    }
    plaintext[strlen(ciphertext)] = '\0';
}
int main() {
    char ciphertext[MAX_TEXT_LENGTH] = 
        "53‡‡†305))6*;4826)4‡.)4‡);806*;48†8¶60))85;;]8*;:‡*8†83"
        "(88)5*†;46(;88*96*?;8)*‡(;485);5*†2:*‡(;4956*2(5*—4)8¶8*"
        ";4069285);)6†8)4‡‡;1(‡9;48081;8:8‡1;48†85;4)485†528806*81"
        "(‡9;48;(88;4(‡?34;48)4‡;161;:188;‡?;";
    char plaintext[MAX_TEXT_LENGTH];
    char key[256]; 
    for (int i = 0; i < 256; i++) {
        key[i] = (char)i;
    }
    int freq[256] = {0};
    analyzeFrequency(ciphertext, freq);
    printf("Character Frequency Analysis:\n");
    for (int i = 0; i < 256; i++) {
        if (freq[i] > 0) {
            printf("'%c': %d\n", (char)i, freq[i]);
        }
    }
    key['‡'] = 'E'; 
    key['†'] = 'T'; 
    key['¶'] = 'H'; 
    decrypt(ciphertext, key, plaintext);
    printf("\nDecrypted Plaintext:\n%s\n", plaintext);
    return 0;
}
